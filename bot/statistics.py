"""
      ===== IU7QUIZ STATISTICS COLLECTOR =====
      Copyright (C) 2020 IU7OG Team.

      –í –¥–∞–Ω–Ω–æ–º –º–æ–¥—É–ª–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏, –æ–±–Ω–æ–≤–ª—è—é—â–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤
      –≤–æ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ –≤–æ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
      (–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ).
"""
import time
import json
import math


def ready_update(datastore, day, start_time):
    """
        –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ —Ç–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –≤–æ–ø—Ä–æ—Å.
    """

    # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ—Ç —Å–ª–æ–≤–∞—Ä—è, –æ–ø–∏—Å—ã–≤–∞—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è,
    # —Ç–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è –∏ –≤—Å–µ—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö.
    while len(datastore) <= day:
        datastore.append(dict())
        # –ü—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å.
        datastore[-1]["right"] = list()
        datastore[-1]["wrong"] = list()

    return datastore, (time.time() - start_time) / 3600


def right_answer_handler(question_object, question, times_cortege, queue):
    """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å.
    """

    sum_len = len(question_object["right"]) + len(question_object["wrong"])
    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç –¥–∞–ª –≤–ø–µ—Ä–≤—ã–µ, –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞.
    if sum_len == 0:
        question.first_to_answer += 1
        question.total_answers += 1

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –∑–∞–ø–æ–º–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞.
    question_object["right"].append(
        [times_cortege[2], times_cortege[0] - times_cortege[1]])

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏.
    # (p.s.: sum_len –≤—ã—á–∏—Å–ª—è–ª—Å—è –ø–æ —Å—Ç–∞—Ä–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ (–ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
    # –Ω–æ–≤–æ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞)).
    if sum_len != 0 and len(question_object["wrong"]) > 0 and \
            sum_len - question_object["wrong"][-1] < 2:
        days_left = 2 + sum_len

        i = 0
        while i < len(queue) and queue[i]["days_left"] <= days_left:
            i += 1

        queue.insert(i, {"days_left": days_left, "question_day": question.day})
    queue.pop(0)

    return question_object, question, queue


def wrong_answer_handler(question_object, question, queue):
    """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å.
    """

    sum_len = len(question_object["right"]) + len(question_object["wrong"])
    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–∞–Ω –≤–ø–µ—Ä–≤—ã–µ, –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.
    if sum_len == 0:
        question.total_answers += 1
    question_object["wrong"].append(sum_len)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏.
    days_left = 2 + sum_len

    i = 0
    while i < len(queue) and queue[i]["days_left"] <= days_left:
        i += 1

    queue.insert(i, {"days_left": days_left, "question_day": question.day})
    queue.pop(0)

    return question_object, question, queue


def stat_msg(student):
    """
        –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è.
    """

    datastore = json.loads(student.data)

    if not datastore:
        return "üßê –î–ª—è –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."

    # 1 —ç–ª–µ–º–µ–Ω—Ç - –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞, 2 - –≤–æ–ø—Ä–æ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –¥–∞–Ω –æ—Ç–≤–µ—Ç –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è.
    min_time = math.inf
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –ø—É–Ω–∫—Ç—É –≤—ã—à–µ, —Ç–æ–ª—å–∫–æ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞.
    max_time = 0
    alltime_right = 0
    alltime_total = 0
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ 2 –ø—É–Ω–∫—Ç–∞–º –≤—ã—à–µ, —Ç–æ–ª—å–∫–æ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è.
    max_wait = 0

    for question in datastore:
        # –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
        alltime_right += len(question["right"])
        alltime_total += len(question["right"]) + len(question["wrong"])

        # –ü–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ –∏ —Ö—É–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω –æ—Ç–≤–µ—Ç–∞ (—É—á–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏).
        if question["right"]:
            if question["right"][0][1] > max_time:
                max_time = question["right"][0][1]
            if question["right"][0][1] < min_time:
                min_time = question["right"][0][1]
            if question["right"][0][0] > max_wait:
                max_wait = question["right"][0][0]

    if min_time == math.inf:
        return "üßê –í—ã –µ—â–µ –Ω–µ –¥–∞–≤–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã."

    total_stat = f"üßÆ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: *{alltime_right / alltime_total * 100:.2f}% (–Ω–∞ " \
        f"{alltime_right}/{alltime_total} –±—ã–ª –¥–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç)*\n" \
        f"ü§î –ù–∞–∏–±–æ–ª—å—à–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: *{max_wait * 60:.3f} –º–∏–Ω—É—Ç*\n" \
        f"üèÉ‚Äç‚ôÇÔ∏è –°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç (‚ùì): *{min_time:.3f} —Å–µ–∫—É–Ω–¥*\n" \
        f"üö∂‚Äç‚ôÇÔ∏è –°–∞–º—ã–π –¥–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç (‚ùì): *{max_time:.3f} —Å–µ–∫—É–Ω–¥*\n" \
        "\n‚ùì - —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤"
    return total_stat
